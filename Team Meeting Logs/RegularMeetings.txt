~~~~~Meeting log for November 6~~~~~
Introduction and Icebreaker (5 minutes):
- Brief introduction of team members.
- Icebreaker question: What's your all-time favorite song and why?
- Meeting kicks off with laughter and a sense of camaraderie.

Project Overview (10 minutes):
- Recap of the project vision: Creating "Song Slice," a groundbreaking music rating website.
- Discussing the core features: user profiles, song ratings, comments, and personalized recommendations.
- Excitement builds as the team envisions the impact of Song Slice on the music community.

Brainstorming Session (20 minutes):
- Open floor for ideas on website design, color scheme, and logo.
- Trey suggests a sleek, minimalist design with a user-friendly interface.
- Chris proposes incorporating vibrant colors to make the website visually appealing.
- Matt emphasizes the importance of a memorable logo that reflects the essence of music.
- Whiteboard fills up with doodles and color schemes as creativity flows.

Feature Prioritization (15 minutes):
- Prioritize features based on importance and feasibility.
- Lilia suggests starting with essential features like user registration, song search, and rating.
- Trey emphasizes the need for a robust recommendation algorithm to keep users engaged.
- Team members engage in a lively debate, weighing the pros and cons of each feature.

Task Assignment (10 minutes):
- Breakdown of tasks for the next sprint.
- Chris takes on the responsibility of designing the website layout.
- Matt focuses on backend development and database design.
- Lilia volunteers for the recommendation algorithm implementation.
- Trey oversees the overall project management.
- Roles and responsibilities are clarified, ensuring everyone knows their contribution to the project.

Timeline and Milestones (15 minutes):
- Setting short-term and long-term goals.
- Aim to have a prototype ready for internal testing in four weeks.
- Lilia suggests incorporating user feedback and making iterative improvements.
- The team establishes a realistic timeline, keeping in mind the importance of user feedback.

Potential Challenges and Contingency Plans (10 minutes):
- Identifying possible obstacles and planning for contingencies.
- Chris raises concerns about potential server issues and suggests cloud-based solutions.
- Matt discusses the importance of regular backups to avoid data loss.
- Team members collaborate to develop strategies for overcoming potential hurdles.

Closing Remarks (5 minutes):
- Recap of key decisions and action items.
- Trey expresses confidence in the team's ability to make Song Slice a success.
- All members express enthusiasm and commitment to the project.
- Meeting concludes on a positive note, with the team eager to dive into their respective tasks.

Next Steps:
- Individual research and preparation for the assigned tasks.
- Weekly check-ins to track progress and address any challenges.



~~~~~Meeting log for November 13~~~~~
Meeting Summary:
- Data modeling
- endering login and register pages
- Use of Git commands

What’s been accomplished since last meeting:
- Figma wireframes
- Proper project directory layout
- Added .gitignore
- Pages and Partials added (not detailed quite yet)
- Stubbed out beginning API routes
- API routes for login created

User acceptance testing:
- Unit tests for API routes:
- Login test has been created
- User can't log in unless they provide username and password
  - username must match entry in databse
  - password must match corresponding hashed password
- If username does not exist in database, prompt user with try again and/or register

Questions:
- Is our current directory on-track to meet reqs?
- We are trying to apply styling



~~~~~Meeting log for November 28~~~~~
General
- Check in to see progress that everyone's done
- Everyone is still working on API, general confusion/difficulty
- Do we want to scratch the idea of the reviews?
- Pick either include only the ratings or reviews. For now, stick to ratings
  and do reviews later if we have time

Pages
- Deciding if it's necessary we have a profile page.
- Agreed that as long as you can see WHO left a rating/review on a release page,
  we can go without the profile page
- Home page will have a carousel showing releases (album art)
- We agreed that we'll have 5, maybe also add the searchbar there
- Also, could be that you can just review the releases that are on the homepage
  (new ones show up each day)

API
- General confusion on API
- Chris found a video, but requires React
- Lilia also found video, more in line with what we learned in class,
  uses postman
- Lilia shared progress on API
- We found a way to do the API together, postman has a feature where you can share 
  workspace and let others collaborate.
- DRAWBACK: Postman only allows a max of 3 people, unless you upgrade.
- Trey won't have access to postman, so we need to keep him updated
- Matt changed some things in .env, client_id and client_secret since we used that in Postman
- Matt notices that the way we used the API key from lab 9 is significally different than how we are
  going to use it for spotify
- Spotify endpoints have IDs attached to them and can't find list of IDs that we 
  could use as strict values
- Matt added some spotify authentication functions and such to index.js so we'll be able to
  use that for every API rout we make



~~~~~Meeting log for December 6~~~~~
- Runs without bugs, retty much done?
- The issue with the cloud thing is that it’s only good for an hour and then the Spotify toe=ken expires
- The node module has a way to refresh, but don’t know if it's only for one authorization flow grant
  - Using most complicated one
  - Gonna dabble with it to see if it can be changed
- Bottom of register, we redirect to home page and it passed the test
- Passed an example username and password
  - Negative test that shouldn’t work
    - Didn’t pass in a password and it says “There wasn’t a password”
    - Res.text works but res.body didn’t work
      - Works so we’re keeping it
- Negative login
  - Similar idea to before
    - Res.text
    - If they don’t send a username, message executes
- Logout test
  - Just in case
- Tests are done
  - Chris will do UAT, then we’ll be done
- Make sure everything is in milestone submissions (organize everything)
- Docker logs with test code
  - The website takes a while to load because the website is running tests
- Chris will touch up CSS
- Need to remove the search bar
- Can take screenshots of the website to add the app features to the slides
- Removed search bar
- Chris added UAT plans
